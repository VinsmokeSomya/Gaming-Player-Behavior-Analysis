version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: player_analytics_db
    environment:
      POSTGRES_DB: player_analytics
      POSTGRES_USER: analytics_user
      POSTGRES_PASSWORD: analytics_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U analytics_user -d player_analytics"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - analytics_network

  redis:
    image: redis:7-alpine
    container_name: player_analytics_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - analytics_network

  dashboard:
    build: .
    container_name: player_analytics_dashboard
    environment:
      - DATABASE_URL=postgresql://analytics_user:analytics_password@postgres:5432/player_analytics
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=production-secret-key-change-this
      - DASH_DEBUG=false
      - DASH_HOST=0.0.0.0
      - DASH_PORT=8050
    ports:
      - "8050:8050"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050/dashboard/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - analytics_network

  nginx:
    image: nginx:alpine
    container_name: player_analytics_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - dashboard
    restart: unless-stopped
    networks:
      - analytics_network

volumes:
  postgres_data:
  redis_data:

networks:
  analytics_network:
    driver: bridge